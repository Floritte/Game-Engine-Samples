; SPIR-V
; Version: 1.4
; Generator: Google Shaderc over Glslang; 10
; Bound: 48
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %texturesMap %v_texIndex %v_uv %color %v_color %v_pos %v_normals
               OpExecutionMode %main OriginUpperLeft
               OpSource GLSL 450
               OpSourceExtension "GL_GOOGLE_cpp_style_line_directive"
               OpSourceExtension "GL_GOOGLE_include_directive"
               OpName %main "main"
               OpName %texColor "texColor"
               OpName %texturesMap "texturesMap"
               OpName %v_texIndex "v_texIndex"
               OpName %v_uv "v_uv"
               OpName %color "color"
               OpName %v_color "v_color"
               OpName %v_pos "v_pos"
               OpName %v_normals "v_normals"
               OpDecorate %texturesMap DescriptorSet 0
               OpDecorate %texturesMap Binding 0
               OpDecorate %v_texIndex Flat
               OpDecorate %v_texIndex Location 4
               OpDecorate %v_uv Location 3
               OpDecorate %color Location 0
               OpDecorate %v_color Location 0
               OpDecorate %v_pos Location 1
               OpDecorate %v_normals Location 2
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Function_v4float = OpTypePointer Function %v4float
         %10 = OpTypeImage %float 2D 0 0 0 1 Unknown
         %11 = OpTypeSampledImage %10
       %uint = OpTypeInt 32 0
  %uint_4096 = OpConstant %uint 4096
%_arr_11_uint_4096 = OpTypeArray %11 %uint_4096
%_ptr_UniformConstant__arr_11_uint_4096 = OpTypePointer UniformConstant %_arr_11_uint_4096
%texturesMap = OpVariable %_ptr_UniformConstant__arr_11_uint_4096 UniformConstant
%_ptr_Input_uint = OpTypePointer Input %uint
 %v_texIndex = OpVariable %_ptr_Input_uint Input
%_ptr_UniformConstant_11 = OpTypePointer UniformConstant %11
    %v2float = OpTypeVector %float 2
%_ptr_Input_v2float = OpTypePointer Input %v2float
       %v_uv = OpVariable %_ptr_Input_v2float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
      %color = OpVariable %_ptr_Output_v4float Output
%_ptr_Input_v4float = OpTypePointer Input %v4float
    %v_color = OpVariable %_ptr_Input_v4float Input
    %v3float = OpTypeVector %float 3
     %uint_3 = OpConstant %uint 3
%_ptr_Function_float = OpTypePointer Function %float
%_ptr_Input_v3float = OpTypePointer Input %v3float
      %v_pos = OpVariable %_ptr_Input_v3float Input
  %v_normals = OpVariable %_ptr_Input_v3float Input
       %main = OpFunction %void None %3
          %5 = OpLabel
   %texColor = OpVariable %_ptr_Function_v4float Function
         %19 = OpLoad %uint %v_texIndex
         %21 = OpAccessChain %_ptr_UniformConstant_11 %texturesMap %19
         %22 = OpLoad %11 %21
         %26 = OpLoad %v2float %v_uv
         %27 = OpImageSampleImplicitLod %v4float %22 %26
               OpStore %texColor %27
         %30 = OpLoad %v4float %texColor
         %34 = OpLoad %v4float %v_color
         %35 = OpVectorShuffle %v3float %34 %34 0 1 2
         %38 = OpAccessChain %_ptr_Function_float %texColor %uint_3
         %39 = OpLoad %float %38
         %40 = OpCompositeExtract %float %35 0
         %41 = OpCompositeExtract %float %35 1
         %42 = OpCompositeExtract %float %35 2
         %43 = OpCompositeConstruct %v4float %40 %41 %42 %39
         %44 = OpFMul %v4float %30 %43
               OpStore %color %44
               OpReturn
               OpFunctionEnd
